<%- include('../partial/header.ejs') %>

<!-- <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="top" data-bs-content="Top popover">
  Popover on top
</button> -->


<div class="container">
  <div class="row">
    <div class="col-md-2">
      <%- include('../partial/adminSidebar.ejs') %>
    </div>
    <div class="col-md-10 col-12">
      <h2 style="text-align: center; color: black;">Order Management</h2>
      <div class="col-12 mb-3 mb-lg-5">
        <div class="d-flex justify-content-between">
          <div>Total Generated Amount: <h3><%= sum %></h3></div>
          <!-- <div>Total Generated Amount: <h3><%= codsum %></h3></div> -->
        </div>
        
        


        <div class="overflow-hidden card table-nowrap table-card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0"></h5>
            <!-- <a href="#!" class="btn btn-light btn-sm">View All</a> -->
            <button style="border-radius: 5px;" onclick="location.href = '/admin/returnProductList'">Return Orders</button>
          </div>
          <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0"></h5>
            <!-- <a href="#!" class="btn btn-light btn-sm">View All</a> -->
            <button type="button" style="border-radius: 5px; background-color: black;" data-bs-toggle="modal" data-bs-target="#returnProductModal">Export</button>

            <!-- <button style="border-radius: 5px; background-color: black;" onclick="downloadExcel()">excel</button> -->
          </div>
          <div class="table-responsive">
            <table class="table mb-0">
              <thead class="small text-uppercase bg-body text-muted">
                <tr>
                  <th>Index</th>
                  <th>Name</th>
                  <th>product</th>
                  <th>Email</th>
                  <th>Created Date</th>
                  <th>total</th>
                  <th>Payment Method</th>
                  <th >Action</th>
                  <th >Details</th>


                </tr>
              </thead>
              <tbody>
            
                <% orderList.forEach((list,index) => { %>
                
                  <tr  class="align-middle">
                   
                    <td><span class="d-inline-block align-middle"><%= index+1 %></span></td>
                    <td><%= list.userDetails.firstName %></td>

                    <td>
                      <% list.products.forEach(pro => { %>
                      <div class="d-flex align-items-center">
                        <div>
                          <div class="h6 mb-0 lh-1"><%= pro.stock %></div>
                        </div>
                      </div>
                      <% }) %>
                    </td>

                    <td><%= list.userDetails.email %></td>
                    <td><span><%= list.date.toISOString().slice(0, 10).split('-').reverse().join('-') %></span></td>
                    <td><%= list.total %></td>
                    <td><%= list.paymentMode %></td>


                    <td class="text-end">
                      <div class="dropdown">
                        <a data-bs-toggle="dropdown" href="#" class="btn p-1" aria-expanded="false">
                          <i class="" aria-hidden="true"></i>
                        </a>
                    
                        <div class="row mb-3">
                          <!-- <label for="cars" class="col-sm-4 col-form-label">Category</label> -->
                          <div class="col-sm-8">
                              
                            <select name="status" class="status-select" id="status" style="width: 130px; height: 35px; color: rgb(216, 30, 30);" 
                              onchange="updateStatus('<%= list._id %>',event)">
                            <option  value="<%=list.status %>"  style="color: rgb(49, 227, 46);"><%=list.status %></option>
                            <option value="pending" style="color: black;">pending</option>
                            <option value="processing" style="color: black;">processing</option>
                            <option value="shipped" style="color: black;">shipped</option>
                            <option value="delivered" style="color: rgb(10, 161, 43);">delivered</option>
                            <option value="rejected" style="color: rgb(169, 25, 25);">rejected</option>   
                          </select>  
                      </div>                   
                  </div>                    
                      </div>
                    </td>

                    <td><button onclick="viewDetails('<%=list._id %>')" style="background: none; color: blue;">view</button></td>

                  </tr>
                  <!-- </div> -->
                  <% }) %>


              </tbody>
            </table>

            <!-- <nav aria-label="Page navigation example">
              <ul class="pagination">
                <li class="page-item">
                  <a class="page-link" href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                  </a>
                </li>
            

                  <li class="page-item">
                    <a class="page-link" href=""></a>
                  </li>
            
                  
                <li class="page-item">
                  <a class="page-link" href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                  </a>
                </li>
              </ul>
            </nav> -->
            
           
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

 
  <!--  -->
  <div class="modal fade" id="returnProductModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <!-- <h5 class="modal-title" id="exampleModalLabel">Modal title</h5> -->
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <h5 style="text-align: center;">Export Orders</h5>
          <div>
            <h6>All Orders</h6>
            <button style="border-radius: 5px;  color: rgb(59, 241, 13); background-color: aliceblue;" onclick="downloadExcel()">Download excel</button>
            <button style="border-radius: 5px;  color: rgb(59, 241, 13); background-color: aliceblue;" onclick="downloadPDF()">Download PDF</button>
          </div>
          <br>
          <h6>Choose Date</h6>
          <div>
            <p class="mb-0" style="color: gray;">Starting Date <input id="startingDate" type="date"></p>
          </div>
          <br>
          <div>
              <p style="color: gray;">Ending Date &nbsp; <input id="endingDate" type="date"> </p>
          </div>
          <button style="border-radius: 5px;  color: rgb(59, 241, 13); background-color: aliceblue;" onclick="downloadExcelByDate()">Download excel</button>
          <button style="border-radius: 5px;  color: rgb(59, 241, 13); background-color: aliceblue;" onclick="downloadPDFByDate()">Download PDF</button>

        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

   
<%- include('../componentViews/snackbar.ejs') %>
<div id="snackbar"  class="icon-Success " style="width:20%; height: 20%; color: rgb(7, 211, 7);" >
       Product Status Updated
    <!-- </div> -->
</div>




<script>
 async function viewDetails(_id){

    location.href = `/admin/adminOrderDetails?_id=${_id}`

  }

  async function updateStatus (_id){
    // var selectElement = document.getElementById('status');
        // var selectedOption = selectElement.options[selectElement.selectedIndex];
        // var selectedStatus = selectedOption.text;
        // selectedOption.text =  selectedStatus;
        const statusElement = document.getElementById('status');
        const status = event.target.value 
    console.log(status,_id,'djdjfndj')
    
    const res = await fetch("/admin/updateStatus/", {
        method: "POST",
        body: JSON.stringify({_id,status}),
        headers: {
          "Content-Type": "application/json",
        },
    });
    const data = await res.json()
    if(data.success){
      myFunction()
      couponError.innerHTML = 'success'
      setTimeout(()=>{
        window.location.reload()
      },2000)
    }
    console.log({data})
  }

  
  async function downloadExcel() {
    try {
        const res = await fetch("/admin/downloadExcel");
        if (res.ok) {
            const blob = await res.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'orders.xlsx';
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
        } else {
            console.error('Failed to download Excel file');
        }
    } catch (error) {
        console.error('Error downloading Excel file:', error);
    }
}

async function downloadPDF() {
    try {
        const res = await fetch("/admin/generatePDF"); // Change the endpoint to match your server route
        if (res.ok) {
            const blob = await res.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'example.pdf'; // Change the filename as needed
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
        } else {
            console.error('Failed to download PDF file');
        } 
    } catch (error) {
        console.error('Error downloading PDF file:', error);
    }
}

async function downloadExcelByDate(){
  try {
    console.log('entered');
    const startingDate = document.getElementById('startingDate').value;
    const endingDate = document.getElementById('endingDate').value;
    console.log(startingDate, endingDate);
    const res = await fetch("/admin/downloadExcelByDate/", {
        method: "POST",
        body: JSON.stringify({ startingDate,endingDate }),
        headers: {
          "Content-Type": "application/json",
        },
      });
        if (res.ok) {
            const blob = await res.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'orders.xlsx';
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
        } else {
            console.error('Failed to download Excel file');
        }
  } catch (error) {
    console.log(error)
  }
}


async function downloadPDFByDate() {
    try {
      const startingDate = document.getElementById('startingDate').value;
    const endingDate = document.getElementById('endingDate').value;
        const res = await fetch("/admin/downloadPDFByDate", {
        method: "POST",
        body: JSON.stringify({ startingDate,endingDate }),
        headers: {
          "Content-Type": "application/json",
        },
      }); // Change the endpoint to match your server route
        if (res.ok) {
            const blob = await res.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'example.pdf'; // Change the filename as needed
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
        } else {
            console.error('Failed to download PDF file');
        } 
    } catch (error) {
        console.error('Error downloading PDF file:', error);
    }
}


</script>

